name: CI/CD Pipeline - Abalone Age Predictor

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/abalone-age-predictor

jobs:
  build-train-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install DVC and dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install dvc[all]

      - name: Configure DVC remote (DagsHub)
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          dvc remote modify origin --local auth basic
          dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME }}
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_TOKEN }}

      name: CI/CD Pipeline for Abalone Age Predictor (Docker Hub)

        run: dvc pull

      - name: Run Data Export from MongoDB
        run: python mongo_export.py

      - name: Run Training Pipeline
        run: python main.py

      - name: Run Tests
        run: pytest --maxfail=1 --disable-warnings -q

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:latest .

      name: CI/CD Pipeline - Abalone Age Predictor

      on:
        push:
          branches: [main]
        pull_request:
          branches: [main]

      env:
        IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/abalone-age-predictor

jobs:
  build-train-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install DVC and dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install dvc[all]

      - name: Configure DVC remote (DagsHub)
        env:
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        run: |
          dvc remote modify origin --local auth basic
          dvc remote modify origin --local user ${{ secrets.DAGSHUB_USERNAME }}
          dvc remote modify origin --local password ${{ secrets.DAGSHUB_TOKEN }}

      - name: DVC Pull Data & Artifacts
        run: dvc pull

      - name: Run Data Export from MongoDB
        run: python mongo_export.py

      - name: Run Training Pipeline
        run: python main.py

      - name: Run Tests
        run: pytest --maxfail=1 --disable-warnings -q

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: docker push $IMAGE_NAME:latest
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Clean previous images and containers
        run: |
         docker system prune -f